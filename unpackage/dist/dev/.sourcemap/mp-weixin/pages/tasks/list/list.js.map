{"version":3,"file":"list.js","sources":["pages/tasks/list/list.vue","../../../../../HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGFza3MvbGlzdC9saXN0LnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"task-list-container\">\n\t\t<!-- 顶部搜索栏 -->\n\t\t<view class=\"search-header\">\n\t\t\t<view class=\"header-top\">\n\t\t\t\t<text class=\"header-title\">{{ userRole === 'employer' ? '我发布的任务' : '找任务' }}</text>\n\t\t\t\t<view v-if=\"userRole === 'employer'\" class=\"publish-button\" @tap=\"navigateTo('/pages/tasks/create/create')\">发布任务</view>\n\t\t\t</view>\n\t\t\t<view class=\"search-bar\">\n\t\t\t\t<text class=\"iconfont icon-search search-icon\"></text>\n\t\t\t\t<input class=\"search-input\" type=\"text\" v-model=\"searchKey\" placeholder=\"搜索任务\" />\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 筛选条件 -->\n\t\t<view class=\"filter-tabs\">\n\t\t\t<view v-for=\"(tab, index) in userRole === 'employer' ? employerTabs : workerTabs\" :key=\"index\"\n\t\t\t\tclass=\"tab-item\" :class=\"{ 'active-tab': currentTab === index }\" @tap=\"currentTab = index\">\n\t\t\t\t<text class=\"tab-text\">{{ tab }}</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 任务列表 -->\n\t\t<scroll-view scroll-y class=\"task-scroll-view\" @scrolltolower=\"loadMore\">\n\t\t\t<!-- 空状态 -->\n\t\t\t<view v-if=\"tasks.length === 0\" class=\"empty-state\">\n\t\t\t\t<image src=\"/static/empty.png\" class=\"empty-image\" mode=\"aspectFit\"></image>\n\t\t\t\t<text class=\"empty-text\">暂无任务</text>\n\t\t\t</view>\n\n\t\t\t<!-- 任务卡片列表 -->\n\t\t\t<view v-else class=\"task-list\">\n\t\t\t\t<view v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"task-card\">\n\t\t\t\t\t<!-- 点击卡片整体区域（除按钮外）去详情页 -->\n\t\t\t\t\t<view class=\"card-content\" @tap=\"goToDetail(task.id)\">\n\t\t\t\t\t\t<!-- 任务标题和状态 -->\n\t\t\t\t\t\t<view class=\"card-top\">\n\t\t\t\t\t\t\t<text class=\"task-title\">{{ task.title }}</text>\n\t\t\t\t\t\t\t<text class=\"task-status\" :class=\"getStatusClass(task.status)\">{{ getStatusText(task.status) }}</text>\n\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t<!-- 任务描述 -->\n\t\t\t\t\t\t<text class=\"task-description\">{{ task.description }}</text>\n\n\t\t\t\t\t\t<!-- 任务基本信息 -->\n\t\t\t\t\t\t<view class=\"task-info\">\n\t\t\t\t\t\t\t<text class=\"task-reward\">报酬: ¥{{ task.reward }}</text>\n\t\t\t\t\t\t\t<text class=\"task-deadline\">截止时间: {{ formatDate(task.deadline) }}</text>\n\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t<!-- 分隔线 -->\n\t\t\t\t\t\t<view class=\"divider\"></view>\n\n\t\t\t\t\t\t<!-- 发布者信息 -->\n\t\t\t\t\t\t<view class=\"card-bottom\">\n\t\t\t\t\t\t\t<view class=\"publisher-info\">\n\t\t\t\t\t\t\t\t<image :src=\"task.publisher.avatar\" class=\"publisher-avatar\"></image>\n\t\t\t\t\t\t\t\t<text class=\"publisher-name\">{{ task.publisher.name }}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 操作按钮 - 单独放在外面，不受卡片点击事件影响 -->\n\t\t\t\t\t<view class=\"action-buttons\">\n\t\t\t\t\t\t<button v-if=\"userRole === 'worker'\" class=\"apply-button\" @tap=\"applyTask(task.id, $event)\">申请</button>\n\t\t\t\t\t\t<button v-else class=\"manage-button\" @tap=\"manageTask(task.id, $event)\">管理</button>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\n\t\t\t<!-- 加载更多 -->\n\t\t\t<view v-if=\"loading && tasks.length > 0\" class=\"loading-more\">\n\t\t\t\t<text class=\"loading-text\">加载中...</text>\n\t\t\t</view>\n\t\t</scroll-view>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch } from 'vue';\n\n// 搜索关键字\nconst searchKey = ref('');\n\n// 用户角色\nconst userRole = ref('worker'); // 'worker' 或 'employer'\n\n// 标签页\nconst workerTabs = ['全部', '最新', '热门', '推荐'];\nconst employerTabs = ['全部', '招募中', '进行中', '已完成'];\nconst currentTab = ref(0);\n\n// 任务列表数据\nconst tasks = ref([]);\nconst loading = ref(false);\nconst pageNum = ref(1);\nconst pageSize = ref(10);\n\n// 监听角色变化，重新加载数据\nwatch(userRole, () => {\n\ttasks.value = [];\n\tpageNum.value = 1;\n\tfetchTasks();\n});\n\n// 获取任务列表\nconst fetchTasks = async () => {\n\tloading.value = true;\n\ttry {\n\t\tconst response = await uni.request({\n\t\t\turl: 'http://localhost:3000/tasks',\n\t\t\tmethod: 'GET',\n\t\t\tdata: {\n\t\t\t\tpage: pageNum.value,\n\t\t\t\tpageSize: pageSize.value,\n\t\t\t\trole: userRole.value,\n\t\t\t\ttab: currentTab.value,\n\t\t\t\tsearchKey: searchKey.value\n\t\t\t}\n\t\t});\n\n\t\tif (response.statusCode === 200) {\n\t\t\tconst newTasks = response.data;\n\t\t\ttasks.value = pageNum.value === 1 ? newTasks : [...tasks.value, ...newTasks];\n\t\t} else {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取任务列表失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('获取任务列表失败:', error);\n\t\tuni.showToast({\n\t\t\ttitle: '网络请求失败',\n\t\t\ticon: 'none'\n\t\t});\n\t} finally {\n\t\tloading.value = false;\n\t}\n};\n\n// 加载更多\nconst loadMore = () => {\n\tif (loading.value) return;\n\tpageNum.value++;\n\tfetchTasks();\n};\n\n// 跳转到详情页\nconst goToDetail = (id) => {\n\tuni.navigateTo({\n\t\turl: `/pages/tasks/detail/detail?id=${id}`,\n\t\tanimationType: 'fade-in',\n\t\tanimationDuration: 200\n\t});\n};\n\n// 申请任务\nconst applyTask = (id, event) => {\n\tevent.stopPropagation();\n\t\n\tuni.navigateTo({\n\t\turl: `/pages/tasks/detail/detail?id=${id}`\n\t});\n};\n\n// 管理任务\nconst manageTask = (id, event) => {\n\tevent.stopPropagation();\n\t\n\tuni.navigateTo({\n\t\turl: `/pages/tasks/detail/detail?id=${id}&manage=true`\n\t});\n};\n\n// 页面导航\nconst navigateTo = (url) => {\n\tuni.navigateTo({\n\t\turl\n\t});\n};\n\n// 格式化日期\nconst formatDate = (date) => {\n\tconst d = new Date(date);\n\treturn `${d.getFullYear()}-${(d.getMonth() + 1).toString().padStart(2, '0')}-${d.getDate().toString().padStart(2, '0')}`;\n};\n\n// 根据状态获取样式\nconst getStatusClass = (status) => {\n\tswitch (status) {\n\t\tcase 'open':\n\t\t\treturn 'status-open';\n\t\tcase 'in_progress':\n\t\t\treturn 'status-progress';\n\t\tcase 'completed':\n\t\t\treturn 'status-completed';\n\t\tcase 'closed':\n\t\t\treturn 'status-closed';\n\t\tdefault:\n\t\t\treturn 'status-completed';\n\t}\n};\n\n// 根据状态获取文本\nconst getStatusText = (status) => {\n\tswitch (status) {\n\t\tcase 'open':\n\t\t\treturn '招募中';\n\t\tcase 'in_progress':\n\t\t\treturn '进行中';\n\t\tcase 'completed':\n\t\t\treturn '已完成';\n\t\tcase 'closed':\n\t\t\treturn '已关闭';\n\t\tdefault:\n\t\t\treturn '未知';\n\t}\n};\n\n// 页面加载时获取任务列表\nonMounted(() => {\n\t// 从缓存中获取用户角色\n\tconst cachedUserRole = uni.getStorageSync('userRole');\n\tif (cachedUserRole) {\n\t\tuserRole.value = cachedUserRole;\n\t}\n\n\tfetchTasks();\n});\n</script>\n\n<style>\n.task-list-container {\n    display: flex;\n    flex-direction: column;\n    background-color: #f9fafb;\n    min-height: 100vh;\n    box-sizing: border-box;\n    width: 100%;\n}\n\n/* 顶部搜索栏 */\n.search-header {\n    position: sticky;\n    top: 0;\n    background-color: #ffffff;\n    padding: 30rpx;\n    box-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.05);\n    z-index: 10;\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.header-top {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 20rpx;\n}\n\n.header-title {\n    font-size: 36rpx;\n    font-weight: bold;\n}\n\n.publish-button {\n    background-color: #3b82f6;\n    color: #ffffff;\n    font-size: 26rpx;\n    padding: 10rpx 30rpx;\n    border-radius: 9999rpx;\n}\n\n.search-bar {\n    display: flex;\n    align-items: center;\n    background-color: #f3f4f6;\n    border-radius: 9999rpx;\n    padding: 15rpx 30rpx;\n}\n\n.search-icon {\n    color: #9ca3af;\n    margin-right: 10rpx;\n}\n\n.search-input {\n    flex: 1;\n    font-size: 28rpx;\n    height: 60rpx;\n}\n\n/* 筛选条件 */\n.filter-tabs {\n    display: flex;\n    padding: 20rpx;\n    background-color: #ffffff;\n    border-bottom: 1rpx solid #e5e7eb;\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.tab-item {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 15rpx 0;\n}\n\n.tab-text {\n    font-size: 28rpx;\n}\n\n.active-tab {\n    color: #3b82f6;\n    font-weight: 500;\n}\n\n/* 任务列表 */\n.task-scroll-view {\n    flex: 1;\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.empty-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 100rpx 0;\n    width: 100%;\n}\n\n.empty-image {\n    width: 200rpx;\n    height: 200rpx;\n    margin-bottom: 30rpx;\n}\n\n.empty-text {\n    color: #9ca3af;\n    font-size: 28rpx;\n}\n\n.task-list {\n    padding: 30rpx;\n    box-sizing: border-box;\n    width: 100%;\n}\n\n.task-card {\n    background-color: #ffffff;\n    border-radius: 12rpx;\n    box-shadow: 0 4rpx 6rpx rgba(0, 0, 0, 0.05);\n    padding: 30rpx;\n    margin-bottom: 30rpx;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative; /* 添加相对定位以便于按钮定位 */\n}\n\n.card-content {\n    width: 100%;\n}\n\n/* 卡片顶部区域 */\n.card-top {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20rpx;\n    width: 100%;\n}\n\n.task-title {\n    font-size: 32rpx;\n    font-weight: 600;\n    color: #1f2937;\n    flex: 1;\n    padding-right: 15rpx;\n}\n\n.task-status {\n    font-size: 24rpx;\n    padding: 6rpx 16rpx;\n    border-radius: 9999rpx;\n    white-space: nowrap;\n    flex-shrink: 0;\n}\n\n.status-open {\n    background-color: #d1fae5;\n    color: #047857;\n}\n\n.status-progress {\n    background-color: #dbeafe;\n    color: #1d4ed8;\n}\n\n.status-completed {\n    background-color: #f3f4f6;\n    color: #4b5563;\n}\n\n.status-closed {\n    background-color: #fee2e2;\n    color: #b91c1c;\n}\n\n/* 任务描述 */\n.task-description {\n    font-size: 28rpx;\n    color: #4b5563;\n    margin-bottom: 20rpx;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    line-height: 1.5;\n    width: 100%;\n}\n\n/* 任务基本信息 */\n.task-info {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    font-size: 26rpx;\n    color: #6b7280;\n    margin-bottom: 20rpx;\n    width: 100%;\n}\n\n.task-reward {\n    margin-right: 30rpx;\n    color: #f97316;\n    font-weight: 500;\n}\n\n.task-deadline {\n    color: #6b7280;\n}\n\n/* 分隔线 */\n.divider {\n    height: 1rpx;\n    background-color: #e5e7eb;\n    width: 100%;\n    margin: 20rpx 0;\n}\n\n/* 卡片底部区域 */\n.card-bottom {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    padding-right: 120rpx; /* 为按钮预留空间，避免文字被遮挡 */\n}\n\n.publisher-info {\n    display: flex;\n    align-items: center;\n}\n\n.publisher-avatar {\n    width: 50rpx;\n    height: 50rpx;\n    border-radius: 50%;\n    margin-right: 10rpx;\n}\n\n.publisher-name {\n    font-size: 26rpx;\n    color: #6b7280;\n}\n\n.action-buttons {\n    position: absolute;\n    right: 30rpx;\n    bottom: 30rpx;\n    display: flex;\n    z-index: 2;\n}\n\n.apply-button,\n.manage-button {\n    font-size: 26rpx;\n    border-radius: 8rpx;\n    padding: 10rpx 30rpx;\n    line-height: 1.2;\n    margin: 0;\n    box-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.1);\n}\n\n.apply-button {\n    background-color: #3b82f6;\n    color: #ffffff;\n}\n\n.manage-button {\n    background-color: #f97316;\n    color: #ffffff;\n}\n\n.loading-more {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 30rpx 0;\n    width: 100%;\n}\n\n.loading-text {\n    color: #9ca3af;\n    font-size: 26rpx;\n}\n</style>\n","import MiniProgramPage from 'C:/Users/24203/Desktop/workspace/daily-task-frontend/pages/tasks/list/list.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","watch","uni","onMounted","MiniProgramPage"],"mappings":"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"}